<?xml version="1.0" encoding="utf-8" ?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:xamlly="clr-namespace:Xamlly.XamllyControls;assembly=Xamlly"
    xmlns:edit="clr-namespace:EditableLabel;assembly=EditableLabel"
    xmlns:rxui="clr-namespace:ReactiveUI.XamForms;assembly=ReactiveUI.XamForms"
    xmlns:controls="clr-namespace:Skippy.Controls;assembly=Skippy"
    x:Class="Skippy.App">
    
    <Application.Resources>
        <ResourceDictionary x:Name="Theme"  Source="/Resources/DarkTheme.xaml"/>

        <Style TargetType="ContentPage" ApplyToDerivedTypes="True">
            <Setter Property="BackgroundColor" Value="{DynamicResource BackgroundColor}"/>
        </Style>
        <Style TargetType="Frame">
            <Setter Property="BackgroundColor" Value="{DynamicResource BackgroundColor}"/>
            <Setter Property="BorderColor" Value="{DynamicResource TextPrimaryColor}"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="TextColor" Value="{DynamicResource TextPrimaryColor}"/>
        </Style>
        <Style TargetType="Picker">
            <Setter Property="TextColor" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="TitleColor" Value="{DynamicResource TextPrimaryColor}"/>
            <!--<Setter Property="BackgroundColor" Value="{DynamicResource BackgroundColor}"/>-->
        </Style>
        <Style TargetType="Entry">
            <Setter Property="TextColor" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="BackgroundColor" Value="{DynamicResource BackgroundColor}"/>
            <Setter Property="PlaceholderColor" Value="{DynamicResource TextSecondaryColor}"/>
        </Style>

        <Style TargetType="xamlly:TogglesBar">
            <Setter Property="SelectedColor" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="UnselectedColor" Value="{DynamicResource GrayedColor}"/>
        </Style>
        <Style TargetType="controls:TogglesBar">
            <Setter Property="SelectedColor" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="UnselectedColor" Value="{DynamicResource GrayedColor}"/>
        </Style>
        
        <Style TargetType="xamlly:Switch">
            <Setter Property="ButtonWidth" Value="50"/>
            <Setter Property="OnColor" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="OffColor" Value="{DynamicResource TextSecondaryColor}"/>
            <Setter Property="BackgroundColor" Value="{DynamicResource GrayedColor}"/>
            <Setter Property="TextColor" Value="{DynamicResource BackgroundColor}"/>
        </Style>

        <Style TargetType="edit:EditableLabel">
            <Style.Triggers>
                <Trigger TargetType="edit:EditableLabel" Property="IsEnabled" Value="True">
                    <Setter Property="TextColor" Value="{DynamicResource TextPrimaryColor}"/>
                </Trigger>
                <Trigger TargetType="edit:EditableLabel" Property="IsEnabled" Value="False">
                    <Setter Property="TextColor" Value="{DynamicResource GrayedColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Label" x:Key="DisablableLabel">
            <Style.Triggers>
                <Trigger TargetType="Label" Property="IsEnabled" Value="True">
                    <Setter Property="TextColor" Value="{DynamicResource TextPrimaryColor}"/>
                </Trigger>
                <Trigger TargetType="Label" Property="IsEnabled" Value="False">
                    <Setter Property="TextColor" Value="{DynamicResource GrayedColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="StackLayout">
            <Style.Triggers>
                <Trigger TargetType="StackLayout" Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value=".5"/>
                </Trigger>
                <Trigger TargetType="StackLayout" Property="IsEnabled" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>